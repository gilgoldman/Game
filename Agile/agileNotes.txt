Agile in humans and organizations

Legend:
* Topic
- subtopic
-- Issue
++ Solved, answered
? Question
(!) Important, pay attention!


Acronyms:
~~~~~~~~~



Definitions:
~~~~~~~~~~~~
Facilitators = Stake holders, management, people in position of responsibility




Notes from Martin:
~~~~~~~~~~~~~~~~~~
* Learning mode:
  - Unknown Unknown: Never heard of it
  - Known Unknown: Heard of it
  - Unknown Known: You know what you don't know
  - Known Known: You know what you know, it's routine

* Push-Pull principle:
  - "Is work being pushed to me, or am I pulling it?"
  - Pull: Take initiative, look for things to do, take responsibility
  - Push: Do what you must, wait to be told what to do

* The relation of utilization is 1/(1-x)
  - x axis is utilization, and y is wait time
  - 1 is 100% utilization - 100% is impossible
  - Around 50% is optimal

* Anthill principle:
  - The ants can be deployed to whatever the task is at hand from the anthill
  - About 20-30% of the ants should be specialized (organization experts)
  - Specialized ants should be deployed only when necessary, not all the time
  - Experts should be kept at less than 50% workload
  - "What would you choose? Pay a little for a simple ant to do something for
    two months, or pay twice for a specialized ant to do it in 3 days?"
  - According to Martin, the main issue is overloaded experts

* Lean and agile depend far more on soft skills than hard skills
  - A balanced integrated team of simple ants working together can do much more
    then a group of specialized ants each doing its thing

* Draw stuff!
  - Cynefin model
    - After the Marshmallow challenge: was it Chaotic? Simple? Complicated? Complex?
  - Agile Product Ownership
    - The pentagram of Siemens ownership
      - PM, PRM, SysArch, PO, ScrumMaster - Stakeholders are the Product managers (PRM)

* History:
  - Lean - Toyota, manufacturing, 1950-1960
  - Agile - 1990, software, agile manifesto



Courses: Coursera Agile Development
===================================
Getting started: Agile meets Design Thinking
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Steps of an agile process:
  - Establish Personas: who wants this stuff?
  - Problem scenario and alternatives: How to not build something nobody wants
  - Value proposition and assumptions
  - Customer Discovery and Experience
  - User Stories and Prototypes
  - Product and Promotion

* What is Agile?
  - Individuals and Interactions is better than processes and tools
  - Working software is better than Working documentation
    - documentation means plans and charts, not actual technical documentation
  - Customer collaboration is better than contract negotiation
  - Responding to change is better than following a place

* Focus is on the user (customer/gamer/whatever)
  - Testable narratives
  - Frontload value: get the most valuable things out to the user and see if they work
  - Focus on outcome, not output: it's what you do, not how much you do

* Interdisciplinary collaboration is key
  - Managers - Set SMART goals
    - Specific, Measurable, Achievable, Realistic, Time limited
    - Facilitators of work
  - Specialists
    - Create narratives for the users
    -

* Agile user story structure:
  - As a [Persona], I want to [do something] so that I can [Derive a reward]
  - Persona is a humanized view of the user
    - Actionable
    - Vivid
    - Testable
  - Example:
    - As a [Social mom], I want to [see if anyone likes my Facebook post],
      so that I can [decide if I want to go back and look at it]
  - Stories backlog houses the individual stories by order of priority

* Iterations:
  - Iterations are 2-4 weeks
    Iteration process:
    - Define personas, problem scenarios and propositions
    - Define User stories: Nice, vivid, testable narrative of what the user wants
    - Discuss them as a teams
      - Stories aren't an end, but a means to good specifications
    - Develop
    - Validate that the developed stuff works well and as intended
      - Test in front of users!

* Daily Stand up
  - What did I do Yesterday?
  - What do I plan to do today?
  - What impedes my progress?

* Burndown chart - a graph detailing progress
  - X axis = Time, Y axis = Effort (days, story units, difficulty, etc.)

* Common Agile methodologies: Scrum, Kanban, Extreme Programming(XP)

* Scale friendly vs Innovation friendly
  - Scale friendly: a plan, a product, and hopefully it'll be worth scaling
    - Make a plan, get funded, rent an office, build a product, get a focus group together, ship
  - Innovation friendly: Build something valuable first, cause scaling is easy 
    - Check with customer for validity of idea, assure idea is good, ship MVP, gather and apply feedback, iterate 






Documents: The Scrum Guide
==========================
* What is Scrum?
  - A framework for developing, delivering, and supporting complex products
  - Lightweight, simple, hard to master
  - More than software
  - Iterative, incremental improvement
  - Small, flexible teams
  - Empiricist: Knowledge comes from experience and decision making

* What is it good for?
  - Research:
    - Viable markets
    - Technologies
    - Product capabilities
  - Develop and release products
  - Sustain and renew products
  - Hardware, Software, Embedded, networks, schools, government, marketing, etc.

* Three pillars of Empirical processes:
  - Transparency
    - Everyone should know and understand the important bits
    - Everyone should share a language
    - Everyone should share a common definition of "Done"
  - Inspection
    - Artifacts should be inspected rigorously, but not too often
  - Adaptation
    - Unacceptable results must lead to adjustments
    - Adjustments are to be made as soon as possible
  (!) The four Inspection and Adjustment events:
    - Sprint planning
    - Sprint Review
    - Sprint Retrospective
    - Daily Scrum

* Scrum Values:
  - Commitment
    - People are personally committed to achieving goals
  - Courage
    - People do the right thing and tackle tough problems
  - Focus
    -Everyone focus on the work and the goals
  - Openness
    - Facilitators and Scrum team are open about the work and challenges
  - Respect
    - People respect each other as capable, independent people

* Scrum Teams:
  - Product Owner
    - Responsible for maximizing product value
    - Sole responsible for backlog management:
      - Backlog items are clear, visible, and transparent
      - Prioritizing backlog (Backlog grooming once a week with everyone?)
      - Optimize Dev team
      - Ensure Dev team understands all backlog tasks
      - Ultimately accountable for all these
      - Ultimate authority for backlog
      - May cancel a sprint if required - though has to be used carefully!
      - May use ""No"" liberally - can't allow all features
  - Development Team
    - Manages their own work
    - Self organizing - No one but them may tell them how to achieve "Done"
    - Cross functional - Members have all skills necessary for the task
    - No titles - regardless of work being performed
    - No sub-teams - regardless of testing, architecture, ops, etc.
    - The entire team is accountable, regardless of specialized individual skills
    - Optimal Dev team size is 3-9, excluding PO and SM (Unless they're also developing)
  - Scrum Master
    - Servant-leader 
    - Helps outsiders (and scrum team members) maintain helpful interactions with the Scrum team
    - SM service to PO:
      - Goal, Scope, and product domain are clear to all
      - Provides techniques for effective backlog management
      - Helps backlog items stay clear and concise
      - Helps prioritize backlog
      - Support study and implementation of Agility
      - Facilitating Scrum events when requested or needed
    SM service to Dev Team:
      - Coaching in Self organization and cross functionality
      - Assist in creating high value products
      - Removing impediments
      - Facilitating Scrum events when requested or needed
      - Coaching in organizations where Scrum is not fully adopted and understood
    SM service to organization:
      - Leading and coaching Scrum adoption
      - Planning Scrum implementation
      - Helping stakeholders enact Scrum and empirical product development
      - Change what is needed to increase Scrum team productivity
      - Coordinate with other Scrum masters within organization

* Scrum Events:
  - Opportunities to examine or change something (except sprints)
  - All events are time-boxed (have a maximum duration)
  - May end early if event has served its purpose
  - The Sprint:
    - Constant time (cannot be shortened or lengthened) during development process
    - One month (or less)
    - A product increment is to be created (A usable/releasable increment)
      - A sprint is a project with an outcome
    - No changes that mess with goal
    - Quality goals stay the same
    - Scope may be re-negotiated between PO and SM
    - Has a goal, a design, a flexible plan, the work, and product increment
  - Sprint planning:
  	- Time-boxed to 8 hours per 1 month, less for shorter sprints
  	- A sprint planning event answers:
  	  - What can be delivered by this sprint?
  	  - What needs to be done for the increment to be achieved?
  	







* PO Questions for interview:
How much customer contact is conducted in BISIM, and by who?
	- to Martin, to TSS, to me
1) Is there a defined product vision? What is the product vision?
	- 
2) How much wiggle room would I have? i.e. what would be the scope of the PO's responsibilities? 
3) Is the main client governments? How much documentation and red tape are we looking at? 
	-technical sales support helps with this
4) Do we adapt the product to one client, or do we create the best product we can and find clients?
	- Tension
5) How much of the team is in Prague? Where are the others?
	- How much travel is expected?
	-  about 4-5 trips a year, 3-4 days, approx. one or two overseas, about 
	- Two major conferences, expected to go to at least one
6) Is there a Scrum Master (or equivalent)? Or would I need to hire one?
	- Doing both is possible, but would impair effectiveness of everyone and usually means the team suffers
7) Is there a known WIP (Work in Progress) limit?
	?

* Formal performance review every 6 months
* There'll always be more projects, the team is prime priority
* Once every two weeks an afternoon of "playing" the sim
* Second interview  - 4.5 hours 
	- CV
	- Agile
	- Technical
	- People management
	- Head of block chat for 30 minutes



* PO Tips:
Challenges question:
	- This is a super exciting opportunity to meet the challenges head on with the skills I've learned to-date
	- Able to employ all I learned teaching Agile and enjoy using it to the max
MVP FTW:
	- Customer feedback
	- Analytics
	- Get something out the door, improve later
	- Build from scooter to car, not parts of a car!!!
There is only one boss in the company - the customer. And he can fire everybody
Create focus, and be crystal clear on the product vision!
First reduce Uncertainty, then increase value
Weekly Backlog grooming? No lying!
Update Team forecasts every week

* Q&A:
? How would a typical week look to you? (typical sprint)
	- Assure the Dev team knows what their tasks are and that they are on track
	- Coordinate with Management to see that all is going according to the long term plan
		- Discuss if goals and vision are still relevant
	- Coordinate with high-impact customers
		- "There's only one boss - the customer"
	- Backlog grooming - is everything on track? Do we need to update anything?
	- Daily/bi-daily stand-ups
	- Update data - Team forecasts, stakeholder matrix, NFR's, etc.
	- Prepare next sprint if relevant
? Describe a sprint planning meeting
	- Collaboratively decide on what to do
		- Decision poker, shirt sizes, whatever we agree on with the team
	- Prepare stories in advance, maybe with test team



PO Tools:
* Impact Mapping:
- Group participation of people from different disciplines
- Relates deliverables to desired impacts towards a goal
- Focuses discussion around goals
(!) Preferably, people should be in the same physical location - problematic for distributed teams!(!)
(!) Useful to bring depth and structure to a backlog (!)
(!) Can solve a Scrum Issue - how to track a sprint goal, or how to prioritize a sprint backlog (!)
""There is nothing quite so useless as doing with great efficiency something that should not be done at all""

	- Start with a goal - measurable, clear goal with a time box _____(Why?)
		- Clarify why It is important to achieve this goal!
	- People - who's needed to achieve the goal _____(Who?)
		- Can be both internal or external
			- External: Trainees or experts
			- Useful to utilize personas here - avoid generic terms like "Users"
			- Also consider people who can hinder or damage
	- Impact - How should people's behavior change? _____(How?)
		- Each change should be a measurable part of the map
	- Deliverables - What can we as a team do to inspire the desired behavior change? _____(What?)

	Example:
	Goal: Increase online sales by 10% by the end of the year
	People: 
		Internal: Program Manager; Dev Team
		External: Returning users; First Time users;
	Impact: 
		Returning Users: Refer more friends; Buy more items
		Program Manager: Add competing work (Hindering)
	Deliverables: 
		Refer more friends: Personal discount code
		Buy more items: Promotion
		Add competing work: Set ground rules

* Business Model Generation/Business model canvas
- Use Visualization to better communicate
- Narrows down any business to 9 basic building blocks
	- Value proposition: What value would the business bring (what will it change?)
	- Customer segment: who the customers are?
	- Channels: How and where can the value be delivered?
	- Customer relationships: How do you connect to your clients?
	- Revenue Streams: a summary of the revenue channels
	- Key resources: What is needed to pull it all off
	- Key activities: What will be done to increase value?
	- Key partners: Who needs to be partnered up with to increase value?
	- Cost structure: What are the costs?


	Example: Sammy Super Sandwich shop
	- Value proposition: Provide people with low cost, tasty organic sandwiches
	- Customer Segment: Successful and struggling entrepreneurs 
	- Channels: Kiosks (to reach everyday people), Specialty shops (for successful entrepreneurs), Supermarkets (prepackaged sandwiches)
	- Customer relationships: National add campaign, billboards, and coupons on the local newspaper; Loyalty card
	- Revenue Streams: Sandwich sales, Drinks, Apparel, Secret hot sauce
	- Key resources: Locations, Secret formula, Chefs
	- Key activities: Add campaign, creating new recipes for sandwiches
	- Partners: Local farmers, a distributor, manufacturer to produce clothing
	- Cost structure: Farmers (food), Trucks (delivery), Add campaign, clothing manufacturing, salaries for chefs, store rent

	Subtract costs from revenue to get the expected profit


* MoSCoW: Agree with the stakeholders about the following:
	- Must have: Critical, without it the sprint fails
	- Should have: Important, not needed immediately 
	- Can have: 
	- Won't have: 

* The 100 dollar test:
	- Split a 100 dollars among the proposed tasks. Review

* The Iron Triangle vs The agile triangle:
- Scope vs Value
- Cost vs Quality
- Schedule vs Constraints

* Value Proposition

* Stakeholder map: write down major customers on a matrix to determine how to handle them
- x axis is level of interest from low to high
- Y axis is level of power (influence on project future) from low to high
- Quadrants:
	- High power high interest: Manage Closely
	- High power low interest: Keep satisfied
	- Low power high interest: Keep informed
	- Low power low interest: Monitor (minimum effort)

* Delegation Poker:



General Acronyms:
- Product backlog items should INVEST:
	- Independent: Self contained, preferably no dependencies 
	- Negotiable: Not explicit contracts
	- Valuable: Must deliver value
	- Estimate-able: Possible to determine its size
	- Small: Should be small enough to handle and prioritize
	- Testable: Must provide information to enable testing
NFR: Non functional requirements (Quality, safety, etc.)


.
